{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nlet BowlService = class BowlService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  getPicks() {\n    return this.http.get(`https://sheets.googleapis.com/v4/spreadsheets/11Vl5ra1wCLvW7EFIBzgqTC_76Q5JW4F4u_WPI-6Gr64/values:batchGet?key=AIzaSyA2NSMKGqhbsWlaD9-TIUtu-3viusGQxFE&ranges=B1:BT16`).pipe(map(sheetData => this.formatCells(sheetData.valueRanges[0].values)));\n  }\n  formatCells(cells) {\n    cells[0].splice(0, 2);\n    const bowlGames = cells[0];\n    return cells.reduce((userList, row, index) => {\n      if (index <= 0) {\n        return userList;\n      }\n      const name = row[0];\n      row.splice(0, 2);\n      row = row.filter(r => r !== '');\n      const picks = row.map((p, i) => this._generatePicks(p, bowlGames[i]));\n      userList.push({\n        name,\n        picks,\n        wins: picks.reduce((wins, pick) => {\n          if (pick.win) {\n            wins = wins + 1;\n          }\n          return wins;\n        }, 0),\n        losses: picks.reduce((losses, pick) => {\n          if (pick.loss) {\n            losses = losses + 1;\n          }\n          return losses;\n        }, 0)\n      });\n      return userList;\n    }, []);\n  }\n  _generatePicks(pick, bowl) {\n    return {\n      pick,\n      bowl,\n      win: pick.includes('(W)'),\n      loss: pick.includes('(L)')\n    };\n  }\n};\nBowlService = __decorate([Injectable({\n  providedIn: 'root'\n})], BowlService);\nexport { BowlService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}