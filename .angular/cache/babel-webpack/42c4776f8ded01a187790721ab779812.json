{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport '@pwabuilder/pwainstall';\nimport { Component, HostListener } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nlet AppComponent = class AppComponent {\n  constructor(bowlService, swUpdate, snackBar) {\n    this.bowlService = bowlService;\n    this.swUpdate = swUpdate;\n    this.snackBar = snackBar;\n    this.loading = false;\n    this.columnsToDisplay = ['name', 'wins', 'losses', 'differences'];\n  }\n\n  visibilityChange() {\n    if (!document.hidden) {\n      this.loadPicks();\n    }\n  }\n\n  ngOnInit() {\n    this.loadPicks();\n    this.swUpdate.available.subscribe(event => {\n      console.log('[App] Update available: current version is', event.current, 'available version is', event.available);\n      const snackBarRef = this.snackBar.open('Newer version of the app is available', 'Refresh');\n      snackBarRef.onAction().subscribe(() => {\n        location.reload();\n      });\n    });\n  }\n\n  loadPicks() {\n    this.loading = true;\n    this.bowlService.getPicks().subscribe(picks => {\n      this.loading = false;\n      this.userPicks = picks.sort((pick1, pick2) => {\n        return pick1.wins > pick2.wins ? -1 : 1;\n      });\n    });\n  }\n\n  selectUser(selectedUserPicks) {\n    this.selectedUserPicks = selectedUserPicks;\n    this.userPicks.forEach(up => {\n      up.differences = 0;\n      up.picks.forEach(p => {\n        const selectedUserPick = selectedUserPicks.picks.find(suPicks => suPicks.bowl === p.bowl).pick;\n        const isSameUser = selectedUserPicks.name === up.name;\n        const undecidedGame = !p.win && !p.loss;\n        const isNotTiebreaker = !p.bowl.includes('Tiebreaker');\n\n        if (p.pick !== selectedUserPick && !isSameUser && undecidedGame && isNotTiebreaker) {\n          up.differences++;\n        }\n      });\n    });\n  }\n\n};\n\n__decorate([HostListener('document:visibilitychange', [])], AppComponent.prototype, \"visibilityChange\", null);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [trigger('detailExpand', [state('collapsed', style({\n    height: '0px',\n    minHeight: '0'\n  })), state('expanded', style({\n    height: '*'\n  })), transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))])]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}